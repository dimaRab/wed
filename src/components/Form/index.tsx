import { TextInput, Button, Group, Box, Radio, Checkbox, Textarea } from '@mantine/core';
import { useForm } from '@mantine/form';
import { useState } from 'react';
import { sendMessage } from '../../api/telegram';
import { notifications } from '@mantine/notifications';

import style from "./index.module.scss"

const Form = () => {
   const [isLoading, setIsLoading] = useState(false);
   const [isPresence, setIsPresence] = useState<string>('');
   const [isTransfer, setIsTransfer] = useState<string>('');
   const [events, setEvents] = useState<string[]>([]);
   const [drinks, setDrinks] = useState<string[]>([]);
   const [presenceError, setPresenceError] = useState<string | null>(null);
   const [transferError, setTransferError] = useState<string | null>(null);

   const form = useForm({
      initialValues: {
         fullname: '',
         /* withWhom: '', */
         phone: '',
         wishes: '',
         termsOfService: false,
      },

      validate: {
         fullname: (value) => (/^[A-Za-z–ê-–Ø–∞-—è–Å—ë\s]+$/.test(value) ? null : '–ò–º—è –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å —Ç–æ–ª—å–∫–æ –±—É–∫–≤—ã –∏ –Ω–µ –±—ã—Ç—å –ø—É—Å—Ç—ã–º'),
         termsOfService: (value) => (value === true ? null : '–≤—ã –¥–æ–ª–∂–Ω—ã –¥–∞—Ç—å —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö'),
         /*  phone: (value) => (/^[-+()\d\s]+$/.test(value) ? null : '–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –Ω–æ–º–µ—Ä–∞ —Ç–µ–ª–µ—Ñ–æ–Ω–∞'), */
      },
      clearInputErrorOnChange: true,
   });

   const handleSubmit = async ({ fullname, phone, wishes }: typeof form.values): Promise<void> => {
      try {
         setIsLoading(true)

         let isValid = true;

         form.validate();

         if (!isPresence) {
            setPresenceError('–£–∫–∞–∂–∏—Ç–µ, –±—É–¥–µ—Ç–µ –ª–∏ –≤—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –Ω–∞ —Å–≤–∞–¥—å–±–µ');
            isValid = false;
         } else {
            setPresenceError(null);
         }

         if (!isTransfer && isPresence === "–î–∞") {
            setTransferError('–£–∫–∞–∂–∏—Ç–µ, –Ω—É–∂–µ–Ω –ª–∏ –≤–∞–º —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä');
            isValid = false;
         } else {
            setTransferError(null);
         }

         if (!isValid || form.validate().hasErrors) {
            setIsLoading(false)
            return;
         }

         const message = `–ü–æ–ª–Ω–æ–µ –∏–º—è:  ${fullname} %0A%0A–ü—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ:  ${isPresence} %0A%0A–¢—Ä–∞–Ω—Å—Ñ–µ—Ä:  ${isTransfer} %0A%0A–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è:  ${events} %0A%0A–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞:  ${phone} %0A%0A–ê–ª–∫–æ–≥–æ–ª—å–Ω—ã–µ –Ω–∞–ø–∏—Ç–∫–∏:  ${drinks} %0A%0A–ü–æ–∂–µ–ª–∞–Ω–∏—è:  ${wishes}`

         await sendMessage(message);

         form.reset()
         setEvents([])
         setDrinks([])

         notifications.show({
            title: <div className={style.notificationTitle}>–§–æ—Ä–º–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞</div>,
            message: <div className={style.notificationMessage}> {isPresence === '–î–∞' ? '–ú—ã –±—É–¥–µ–º —Ä–∞–¥—ã –≤–∏–¥–µ—Ç—å –≤–∞—Å –Ω–∞ –Ω–∞—à–µ–π —Å–≤–∞–¥—å–±–µ !' : '–û—á–µ–Ω—å –∂–∞–ª—å, —á—Ç–æ –≤—ã –Ω–µ –±—É–¥–µ—Ç–µ —Å –Ω–∞–º–∏ –Ω–∞ –Ω–∞—à–µ–π —Å–≤–∞–¥—å–±–µ :('}</div>,
         })

      } catch (e) {
         form.setFieldValue('email', e as string);
      } finally {
         setIsLoading(false)
      }
   }

   return (
      <div className={style.container}>
         <Box mx="auto" className={style.box}>
            <div className={style.description}>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–ø–æ–ª–Ω–∏—Ç–µ –ø—Ä–∏–≤–µ–¥–µ–Ω–Ω—É—é –Ω–∏–∂–µ —Ñ–æ—Ä–º—É. –û–±—Ä–∞—Ç–∏—Ç–µ –≤–Ω–∏–º–∞–Ω–∏–µ: –∑–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–µ—Ä–≤—ã—Ö —Ç—Ä—ë—Ö –ø–æ–ª–µ–π, –∞ —Ç–∞–∫–∂–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ —Å–æ–≥–ª–∞—Å–∏—è –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö ‚Äì –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ñ–æ—Ä–º—ã. –û–¥–Ω–∞–∫–æ –º—ã –Ω–∞—Å—Ç–æ—è—Ç–µ–ª—å–Ω–æ —Ä–µ–∫–æ–º–µ–Ω–¥—É–µ–º –≤–∞–º –∑–∞–ø–æ–ª–Ω–∏—Ç—å –≤—Å–µ –ø–æ–ª—è –¥–ª—è –±–æ–ª–µ–µ –ø–æ–ª–Ω–æ–π –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏. –ï—Å–ª–∏ –≤—ã –Ω–µ —Ö–æ—Ç–∏—Ç–µ –∑–∞–ø–æ–ª–Ω—è—Ç—å —Ñ–æ—Ä–º—É, –≤—ã –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å —Å–≤–æ–µ –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–∏–µ –ª–∏—á–Ω–æ.</div>
            <form onSubmit={(e) => {
               e.preventDefault();
               handleSubmit(form.values);
            }}>
               <TextInput
                  classNames={{
                     input: style.input,
                     label: style.label,
                     error: style.error
                  }}
                  size="md"
                  withAsterisk
                  label="–í–∞—à–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—è"
                  placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏ —Ñ–∞–º–∏–ª–∏—é"
                  {...form.getInputProps('fullname')}
               />

               <Radio.Group
                  value={isPresence}
                  onChange={setIsPresence}
                  name="presence"
                  label="–ë—É–¥–µ—Ç–µ –ª–∏ –≤—ã –ø—Ä–∏—Å—É—Ç—Å—Ç–≤–æ–≤–∞—Ç—å –Ω–∞ —Å–≤–∞–¥—å–±–µ ?"
                  withAsterisk
                  error={presenceError}
                  required
                  classNames={{
                     root: style.radioRoot,
                     label: style.radioFirstLabel,
                     error: style.error
                  }}
               >
                  <div className={style.description}>–°–æ–æ–±—â–∏—Ç–µ, –±—É–¥–µ—Ç–µ –ª–∏ –í—ã —Å –¥–µ—Ç—å–º–∏, —Ç–∞–∫ –∫–∞–∫ –Ω–∞ –¥–µ—Ç–µ–π –º–µ—Å—Ç–∞ –∑–∞–∫–∞–∑—ã–≤–∞—é—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω–æ üòâ.</div>
                  <Radio
                     size="xl"
                     classNames={{
                        root: style.radioRoot,
                        label: style.radioLabel,
                        radio: style.radioRadio
                     }}
                     value="–î–∞"
                     label="–î–∞" />
                  <Radio
                     size="xl"
                     classNames={{
                        root: style.radioRoot,
                        label: style.radioLabel,
                        radio: style.radioRadio
                     }}
                     value="–ù–µ—Ç"
                     label="–ù–µ—Ç" />
               </Radio.Group>

               <Radio.Group
                  value={isTransfer}
                  onChange={setIsTransfer}
                  name="transfer"
                  withAsterisk
                  error={transferError}
                  label="–ù—É–∂–µ–Ω –ª–∏ –≤–∞–º —Ç—Ä–∞–Ω—Å—Ñ–µ—Ä ?"
                  classNames={{
                     root: style.radioRoot,
                     label: style.radioFirstLabel,
                     error: style.error
                  }}
               >
                  <Radio
                     size="xl"
                     classNames={{
                        root: style.radioRoot,
                        label: style.radioLabel,
                        radio: style.radioRadio
                     }}
                     value="–î–∞"
                     label="–î–∞" />
                  <Radio
                     size="xl"
                     classNames={{
                        root: style.radioRoot,
                        label: style.radioLabel,
                        radio: style.radioRadio
                     }}
                     value="–ù–µ—Ç"
                     label="–ù–µ—Ç" />
               </Radio.Group>

               <Checkbox.Group
                  label="–ù–∞ –∫–∞–∫–∏—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö –±—É–¥–µ—Ç–µ —Å –Ω–∞–º–∏ ?"
                  value={events}
                  onChange={setEvents}
                  classNames={{
                     label: style.label,
                  }}
               >
                  <Checkbox
                     size="xl"
                     classNames={{
                        label: style.checkboxLabel,
                        root: style.checkboxRoot,
                        input: style.checkboxInput
                     }}
                     value="–í–µ–Ω—á–∞–Ω–∏–µ"
                     label="–í–µ–Ω—á–∞–Ω–∏–µ" />
                  <Checkbox
                     size="xl"
                     classNames={{
                        label: style.checkboxLabel,
                        root: style.checkboxRoot,
                        input: style.checkboxInput
                     }}
                     value="–í—ã–µ–∑–¥–Ω–∞—è —Ä–æ—Å–ø–∏—Å—å"
                     label="–í—ã–µ–∑–¥–Ω–∞—è —Ä–æ—Å–ø–∏—Å—å" />
                  <Checkbox
                     size="xl"
                     classNames={{
                        label: style.checkboxLabel,
                        root: style.checkboxRoot,
                        input: style.checkboxInput
                     }}
                     value="–ü—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–π —É–∂–∏–Ω"
                     label="–ü—Ä–∞–∑–¥–Ω–∏—á–Ω—ã–π —É–∂–∏–Ω" />
               </Checkbox.Group>

               {/*   <TextInput
                  classNames={{
                     input: style.input,
                     label: style.label,
                     error: style.error
                  }}
                  size="md"
                  label="–° –∫–µ–º –≤—ã –±—É–¥–µ—Ç–µ ?"
                  placeholder="–° –∫–µ–º –≤—ã –±—É–¥–µ—Ç–µ ?"
                  {...form.getInputProps('withWhom')}
               /> */}

               <Checkbox.Group
                  label="–ö–∞–∫–∏–µ –ø—Ä–µ–¥–ø–æ—á–∏—Ç–∞–µ—Ç–µ –∞–ª–∫–æ–≥–æ–ª—å–Ω—ã–µ –Ω–∞–ø–∏—Ç–∫–∏ ?"
                  value={drinks}
                  onChange={setDrinks}
                  classNames={{
                     label: style.label,
                  }}
               >
                  <Checkbox
                     size="xl"
                     classNames={{
                        label: style.checkboxLabel,
                        root: style.checkboxRoot,
                        input: style.checkboxInput
                     }}
                     value="–í–æ–¥–∫–∞"
                     label="–í–æ–¥–∫–∞" />
                  <Checkbox
                     size="xl"
                     classNames={{
                        label: style.checkboxLabel,
                        root: style.checkboxRoot,
                        input: style.checkboxInput
                     }}
                     value="–ö—Ä–∞—Å–Ω–æ–µ –≤–∏–Ω–æ"
                     label="–ö—Ä–∞—Å–Ω–æ–µ –≤–∏–Ω–æ" />
                  <Checkbox
                     size="xl"
                     classNames={{
                        label: style.checkboxLabel,
                        root: style.checkboxRoot,
                        input: style.checkboxInput
                     }}
                     value="–ë–µ–ª–æ–µ –≤–∏–Ω–æ"
                     label="–ë–µ–ª–æ–µ –≤–∏–Ω–æ" />
                  <Checkbox
                     size="xl"
                     classNames={{
                        label: style.checkboxLabel,
                        root: style.checkboxRoot,
                        input: style.checkboxInput
                     }}
                     value="–®–∞–º–ø–∞–Ω—Å–∫–æ–µ"
                     label="–®–∞–º–ø–∞–Ω—Å–∫–æ–µ" />
                  <Checkbox
                     size="xl"
                     classNames={{
                        label: style.checkboxLabel,
                        root: style.checkboxRoot,
                        input: style.checkboxInput
                     }}
                     value="–ù–µ –ø—å—é"
                     label="–ù–µ –ø—å—é" />
               </Checkbox.Group>

               <TextInput
                  classNames={{
                     input: style.input,
                     label: style.label,
                     error: style.error
                  }}
                  size="md"
                  label="–ù–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
                  placeholder="–í–≤–µ–¥–∏—Ç–µ —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞"
                  {...form.getInputProps('phone')}
               />
               <Textarea
                  classNames={{
                     input: style.input,
                     label: style.label,
                     error: style.error
                  }}
                  size="md"
                  label="–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º–∏ –∏–¥–µ—è–º–∏, –º—ã—Å–ª—è–º–∏, –ø–æ–∂–µ–ª–∞–Ω–∏—è–º–∏"
                  placeholder="–¢–µ–∫—Å—Ç..."
                  autosize
                  minRows={2}
                  maxRows={4}
                  {...form.getInputProps('wishes')}
               />

               <Group justify="space-between" mt="md" gap="30px">
                  <Checkbox
                     size="xl"
                     classNames={{
                        label: style.checkboxLabel,
                        root: style.checkboxRoot,
                        input: style.checkboxInput
                     }}
                     label="–Ø –¥–∞—é —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö"
                     {...form.getInputProps('termsOfService', { type: 'checkbox' })}
                  />
                  <Button radius={20} className={style.button} size='xl' loading={isLoading} type="submit">–û—Ç–ø—Ä–∞–≤–∏—Ç—å</Button>
               </Group>
            </form>
         </Box>
      </div>

   );
}

export default Form